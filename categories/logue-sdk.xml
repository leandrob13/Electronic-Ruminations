<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Electronic Ruminations (Posts about logue sdk)</title><link>https://leandrob13.github.io/Electronic-Ruminations/</link><description></description><atom:link href="https://leandrob13.github.io/Electronic-Ruminations/categories/logue-sdk.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="https://github.com/leandrob13"&gt;Leandro B&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"/&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Tue, 27 Apr 2021 02:59:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Subharmonikorg: Subharmonic Oscillators for the Korg NTS-1</title><link>https://leandrob13.github.io/Electronic-Ruminations/posts/subharmonikorg-subharmonic-oscillators-for-the-korg-nts-1/</link><dc:creator>Leandro B</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="" src="https://leandrob13.github.io/Electronic-Ruminations/images/nts-1.png#centerme"&gt;&lt;/p&gt;
&lt;p&gt;I have been using the &lt;a href="https://www.korg.com/us/products/dj/nts_1/"&gt;Korg NTS-1&lt;/a&gt; for about 5 months, but it was just 
recently that I was able to spend some time trying to understand how to program it. Korg published its &lt;a href="https://korginc.github.io/logue-sdk/"&gt;logue-sdk&lt;/a&gt;
which is written in C/C++ and it provides useful templates and make files in order tu build custom oscillators, delays 
and modulation effects for your logue based synths. I have only tried programming the NTS-1 since I believe one of the
main purposes of this little synth is to experiment and understand the logue-sdk and how to digitally process the 
signals, which is another way of saying that if you mess up and brick your synth it will only cost you $99 to replace
it instead of bricking the Minilogue XD which retails at $549. &lt;/p&gt;
&lt;p&gt;For a complete review of the NTS-1, I recommend my favorite synth reviewer Loopop. Watch the video below:&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Vhonu-rM0B0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;The Subharmonikorg&lt;/h3&gt;
&lt;p&gt;With the introductions out of the way, lets talk about the Subharmonikorg. I was inspired to program this oscillator
after I saw what Moog did with its analog synth, &lt;a href="https://www.youtube.com/watch?v=ns0Zu5HjShY"&gt;The Subharmonicon&lt;/a&gt; which
is sort of a mix of two previous instruments: the &lt;a href="http://www.analogue.org/network/traut_e.htm"&gt;Tratonium&lt;/a&gt; and the
&lt;a href="https://en.wikipedia.org/wiki/Rhythmicon"&gt;Rythmicon&lt;/a&gt;. I wanted to emulate the subharmonic sound generation and found
out that the subharmonics are derived from the &lt;a href="https://en.wikipedia.org/wiki/Undertone_series"&gt;Underton Series&lt;/a&gt; which is 
basically a mathematics formula that is used to calculate the subharmonics of a given note based on its frequency. So if 
it is mathematically derived then it could be programmed.&lt;/p&gt;
&lt;p&gt;The formula is easy: just divide the note frequency by an integer and you will get the undertone frequency related
to the original note. This can be illustrated in the code hosted in the &lt;a href="https://github.com/leandrob13/logue-hub/blob/master/src/nts-1/osc/subh/subh.cpp#L72"&gt;Logue-Hub Repository&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;w1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;osc_w0f_for_note&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;oscillator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;semitone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pitch&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;sw1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;oscillator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;undertone1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;sw2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;oscillator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;undertone2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Where the function &lt;code&gt;osc_w0f_for_note&lt;/code&gt; returns the frequency value that corresponds to the pitch (note value) passed to the
&lt;code&gt;OSC_CYCLE&lt;/code&gt; function exposed in the &lt;code&gt;logue-sdk&lt;/code&gt; API. Then w1 is divided by the undertones values taken from the editing
params of the NTS-1, which are integer numbers greater than zero. I limited the max possible value of subharmonics to the 
7th undertone.&lt;/p&gt;
&lt;h4&gt;Features&lt;/h4&gt;
&lt;p&gt;The features for version 1.0.0 are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One main harmonic oscillator with semitone calibration up to one octave higher and one octave lower.&lt;/li&gt;
&lt;li&gt;Two subharmonic oscillators that divide the main oscillator tone up to the 7th undertone.&lt;/li&gt;
&lt;li&gt;Choose different undertones for each suboscillator.&lt;/li&gt;
&lt;li&gt;Mix between the main oscillator and the suboscillators with the &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;alt&lt;/code&gt; knobs respectively.&lt;/li&gt;
&lt;li&gt;Choose between square, saw and sine waveforms.&lt;/li&gt;
&lt;li&gt;Modulate the main oscillator mix with the LFO.&lt;/li&gt;
&lt;li&gt;Subharmonic oscillators arpeggiator with clock adjustment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The arpeggiator is a separate implementation from the native NTS-1 arpeggiator. In the current version 1.0.0, the only 
pattern available is &lt;code&gt;down&lt;/code&gt; and it only affects the suboscillators. This means that if you hold a note, the main
oscillator will stay on it while both suboscillators will cycle from the 2nd through the 7th subharmonic. Having
separate arpeggiators allows you to play with interesting rhythm patterns. &lt;/p&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;p&gt;The parameters you can edit are listed below.&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Parameter&lt;/th&gt;
&lt;th align="left"&gt;Range&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SHAPE&lt;/td&gt;
&lt;td align="left"&gt;0 to 100&lt;/td&gt;
&lt;td align="left"&gt;level mix of main oscillator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ALT&lt;/td&gt;
&lt;td align="left"&gt;0 to 100&lt;/td&gt;
&lt;td align="left"&gt;level mix of suboscillators&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;semitone&lt;/td&gt;
&lt;td align="left"&gt;-12 to 12&lt;/td&gt;
&lt;td align="left"&gt;semitone tuning of main oscillator (-12 lower octave, 12 higher octave)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;undertone 1&lt;/td&gt;
&lt;td align="left"&gt;1 to 7&lt;/td&gt;
&lt;td align="left"&gt;undertone value of first suboscillator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;undertone 2&lt;/td&gt;
&lt;td align="left"&gt;1 to 7&lt;/td&gt;
&lt;td align="left"&gt;undertone value of second suboscillator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;oscT&lt;/td&gt;
&lt;td align="left"&gt;1 to  3&lt;/td&gt;
&lt;td align="left"&gt;The oscillator type 1: saw, 2: square, 3: sine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Arp Type&lt;/td&gt;
&lt;td align="left"&gt;0 to  1&lt;/td&gt;
&lt;td align="left"&gt;The arpeggiator type 0: off, 1: down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Arp Clock&lt;/td&gt;
&lt;td align="left"&gt;0 to  100&lt;/td&gt;
&lt;td align="left"&gt;The arpeggiator clock in hertz.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;The Showcase&lt;/h3&gt;
&lt;p&gt;I did some noise experiment where I played with the NTS-1 Subharmonikorg and Moog's &lt;a href="https://www.moogmusic.com/products/werkstatt-01-cv-expander"&gt;Werkstatt-01&lt;/a&gt;.
The Subharmonikorg is playing its arpeggio while I hit some lead notes with the Werkstatt. I tried to keep the mood creepy.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Here is the video of the weird experiment:&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZgSYehljJU8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For the whole 7 minutes noise, listen to it in bandcamp &lt;a href="https://leandrob.bandcamp.com/track/tormentor"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get the latest version of the Subharmonikorg in github &lt;a href="https://github.com/leandrob13/logue-hub/tree/master/oscillators/nts-1"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are some other oscillator ideas I have and some new features I want to test out for the NTS-1 for this oscillator. 
Hopefully I will also try this out with my newest adquisition, the Minilogue XD.&lt;/p&gt;&lt;/div&gt;</description><category>korg</category><category>logue sdk</category><category>nts-1</category><category>synths</category><guid>https://leandrob13.github.io/Electronic-Ruminations/posts/subharmonikorg-subharmonic-oscillators-for-the-korg-nts-1/</guid><pubDate>Sun, 04 Apr 2021 23:21:00 GMT</pubDate></item></channel></rss>